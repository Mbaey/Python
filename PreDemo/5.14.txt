Python 3.6.0 (v3.6.0:41df79263a11, Dec 23 2016, 07:18:10) [MSC v.1900 32 bit (Intel)] on win32
Type "copyright", "credits" or "license()" for more information.
>>> for i in "sssassa"
SyntaxError: invalid syntax
>>> for i in "sssassa":
	print(i)

	
s
s
s
a
s
s
a
>>> for i in range(10):
	print(i)

	
0
1
2
3
4
5
6
7
8
9
>>> for i in range(0,100, 3):
	print(i)

	
0
3
6
9
12
15
18
21
24
27
30
33
36
39
42
45
48
51
54
57
60
63
66
69
72
75
78
81
84
87
90
93
96
99
>>> for i in range(10):
	if i%2 !=0:		
		print(i)
		continue
	i+=2
	print(i)

	
2
1
4
3
6
5
8
7
10
9
>>> 
[DEBUG ON]
>>> 
[DEBUG OFF]
>>> 
[DEBUG ON]
>>> for i in range(10):
	if i%2 !=0:		
		print(i)
		continue
	i+=2
	print(i)

	
[DEBUG OFF]
>>> 
>>> for i in range(10):
	if i%2 !=0:		
		print(i)
		continue
	i+=2
	print(i)
[DEBUG ON]
>>> for i in range(10):
	if i%2 !=0:		
		print(i)
		continue
	i+=2
	print(i)

	
2
1
4
3
6
5
[DEBUG OFF]
>>> 
>>> 
======================= RESTART: D:\LI\Python\Demo.py =======================
2
1
4
3
6
5
8
7
10
9
>>> 
======================= RESTART: D:\LI\Python\Demo.py =======================
a=2
2
a=1
1
a=2
2
a=3
3
a=4
4
a=124
124
a=214
214
a=
Traceback (most recent call last):
  File "D:\LI\Python\Demo.py", line 2, in <module>
    a = input("a=")
KeyboardInterrupt
>>> 
======================= RESTART: D:\LI\Python\Demo.py =======================
x1=3.1
Traceback (most recent call last):
  File "D:\LI\Python\Demo.py", line 4, in <module>
    x = radians(x1)
TypeError: must be real number, not str
>>> 
======================= RESTART: D:\LI\Python\Demo.py =======================
x1=52
s=0.8245097388631527, a=-0.08306147217389874
>>> 
======================= RESTART: D:\LI\Python\Demo.py =======================
x1=52
s=0.8245097388631527, a=-0.08306147217389874, x=0.9075712110370514
>>> 
======================= RESTART: D:\LI\Python\Demo.py =======================
x1=51
s=0.8117568910838195, a=-0.0783610274332886, x=51
>>> 
======================= RESTART: D:\LI\Python\Demo.py =======================
x1=51
s=0.814200576269618, a=3.927934853207886e-07, x=51
>>> 
======================= RESTART: D:\LI\Python\Demo.py =======================
x1=3.14
Traceback (most recent call last):
  File "D:\LI\Python\Demo.py", line 3, in <module>
    x1 = (int)(input("x1="))
ValueError: invalid literal for int() with base 10: '3.14'
>>> 
======================= RESTART: D:\LI\Python\Demo.py =======================
x1=3.14
s=0.05478505219074766, a=2.1971138421219824e-09, x=3.14
>>> 0
0
>>> 1.57
1.57
>>> 
>>> 
======================= RESTART: D:\LI\Python\Demo.py =======================
x1=1.57
s=0.027399383260097266, a=6.865980756631195e-11, x=1.57
>>> 
======================= RESTART: D:\LI\Python\Demo.py =======================
x1=3.1415926535
s=0.054812821401020784, a=2.202691537317871e-09, x=3.1415926535
>>> 我="李朝阳"
>>> 我
'李朝阳'
>>> m= [1,2,"LI"]
>>> m
[1, 2, 'LI']
>>> m[3] = 1
Traceback (most recent call last):
  File "<pyshell#27>", line 1, in <module>
    m[3] = 1
IndexError: list assignment index out of range
>>> m.append(22)
>>> m
[1, 2, 'LI', 22]
>>> m.extend([2,3, "asas"])
>>> m
[1, 2, 'LI', 22, 2, 3, 'asas']
>>> m.insert(0, "??")
>>> m
['??', 1, 2, 'LI', 22, 2, 3, 'asas']
>>> m[0] = "hello"
>>> m
['hello', 1, 2, 'LI', 22, 2, 3, 'asas']
>>> for i in m:
	print(i)

	
hello
1
2
LI
22
2
3
asas
>>> m[0], m[1] = m[1],m[0]
>>> m
[1, 'hello', 2, 'LI', 22, 2, 3, 'asas']
>>> m.remove(22)
>>> m
[1, 'hello', 2, 'LI', 2, 3, 'asas']
>>> m.remove(2)
>>> m
[1, 'hello', 'LI', 2, 3, 'asas']
>>> m.remove(0)
Traceback (most recent call last):
  File "<pyshell#45>", line 1, in <module>
    m.remove(0)
ValueError: list.remove(x): x not in list
\
>>> del m[3]
>>> m
[1, 'hello', 'LI', 3, 'asas']
>>> m.pou()
Traceback (most recent call last):
  File "<pyshell#48>", line 1, in <module>
    m.pou()
AttributeError: 'list' object has no attribute 'pou'
>>> m.pop()
'asas'
>>> m.pop(0)
1
>>> 
>>> m\

   
['hello', 'LI', 3]
>>> m.reverse
<built-in method reverse of list object at 0x02BEDC38>
>>> s
0.054812821401020784
>>> m
['hello', 'LI', 3]
>>> m[1,2]
Traceback (most recent call last):
  File "<pyshell#57>", line 1, in <module>
    m[1,2]
TypeError: list indices must be integers or slices, not tuple
>>> m[1:2]
['LI']
>>> m[1:3]
['LI', 3]
>>> m.e
Traceback (most recent call last):
  File "<pyshell#60>", line 1, in <module>
    m.e
AttributeError: 'list' object has no attribute 'e'
>>> m.extend(["I", "Love", 'You'])
>>> m
['hello', 'LI', 3, 'I', 'Love', 'You']
>>> m[1:6]
['LI', 3, 'I', 'Love', 'You']
>>> m[1:40]
['LI', 3, 'I', 'Love', 'You']
>>> m[1:len(m)]
['LI', 3, 'I', 'Love', 'You']
>>> m[1:]
['LI', 3, 'I', 'Love', 'You']
>>> m[:]
['hello', 'LI', 3, 'I', 'Love', 'You']
>>> m2 = m[:]
>>> m2
['hello', 'LI', 3, 'I', 'Love', 'You']
>>> del m
>>> m
Traceback (most recent call last):
  File "<pyshell#71>", line 1, in <module>
    m
NameError: name 'm' is not defined
>>> m@
SyntaxError: invalid syntax
>>> m2
['hello', 'LI', 3, 'I', 'Love', 'You']
>>> m = mw[:]
Traceback (most recent call last):
  File "<pyshell#74>", line 1, in <module>
    m = mw[:]
NameError: name 'mw' is not defined
>>> m = m2[:]
>>> m.pop()
'You'
>>> m<m2
True
>>> m[2] = 4
>>> m>m2
True
>>> m
['hello', 'LI', 4, 'I', 'Love']
>>> m2
['hello', 'LI', 3, 'I', 'Love', 'You']
>>> s = "dsaklhf"
>>> s+="a"
>>> s
'dsaklhfa'
>>> s*=2
>>> 
>>> s
'dsaklhfadsaklhfa'
>>> 4 in m
True
>>> 3 not in m
True
>>> 3 not in m2
False
>>> m.ins
Traceback (most recent call last):
  File "<pyshell#91>", line 1, in <module>
    m.ins
AttributeError: 'list' object has no attribute 'ins'
>>> m.insert([11,111])
Traceback (most recent call last):
  File "<pyshell#92>", line 1, in <module>
    m.insert([11,111])
TypeError: insert() takes exactly 2 arguments (1 given)
>>> m.append([11,111])
>>> m
['hello', 'LI', 4, 'I', 'Love', [11, 111]]
>>> 11 in m
False
>>> 11 in m[len(m)]
Traceback (most recent call last):
  File "<pyshell#96>", line 1, in <module>
    11 in m[len(m)]
IndexError: list index out of range
>>> 11 in m[5]
True
>>> 11 in m[5][2]
Traceback (most recent call last):
  File "<pyshell#98>", line 1, in <module>
    11 in m[5][2]
IndexError: list index out of range
>>> m[5][2]
Traceback (most recent call last):
  File "<pyshell#99>", line 1, in <module>
    m[5][2]
IndexError: list index out of range
>>> m[5][1]
111
>>> dir(list)
['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']
>>> m.count
<built-in method count of list object at 0x02C08CD8>
>>> m.count(4)
1
>>> m.count(3)
0
>>> m.revese()
Traceback (most recent call last):
  File "<pyshell#105>", line 1, in <module>
    m.revese()
AttributeError: 'list' object has no attribute 'revese'
>>> m.reverse()
>>> m
[[11, 111], 'Love', 'I', 4, 'LI', 'hello']
>>> m.sort()
Traceback (most recent call last):
  File "<pyshell#108>", line 1, in <module>
    m.sort()
TypeError: '<' not supported between instances of 'str' and 'list'
>>> m.pop(0)
[11, 111]
>>> m.sort()
Traceback (most recent call last):
  File "<pyshell#110>", line 1, in <module>
    m.sort()
TypeError: '<' not supported between instances of 'int' and 'str'
>>> m = range(55)
>>> m
range(0, 55)
>>> m=[5,4,7,8,,1,4,5,3,4,65]
SyntaxError: invalid syntax
>>> m=[5,4,7,8,1,4,5,3,4,65]
>>> m
[5, 4, 7, 8, 1, 4, 5, 3, 4, 65]
>>> m.sort()
>>> m
[1, 3, 4, 4, 4, 5, 5, 7, 8, 65]
>>> m.sort(reverse=  True)
>>> m
[65, 8, 7, 5, 5, 4, 4, 4, 3, 1]
>>> m2 = m[:]
>>> m
[65, 8, 7, 5, 5, 4, 4, 4, 3, 1]
>>> m.sort()
>>> m
[1, 3, 4, 4, 4, 5, 5, 7, 8, 65]
>>> m2
[65, 8, 7, 5, 5, 4, 4, 4, 3, 1]
>>> demo =  ,
SyntaxError: invalid syntax
>>> demo =  1,
>>> type(demo)
<class 'tuple'>
>>> 8*(8,)
(8, 8, 8, 8, 8, 8, 8, 8)
>>> demo = (2,4,5,7)
>>> demo
(2, 4, 5, 7)
>>> demo
(2, 4, 5, 7)
>>> demo = demo[:1] + 1000, + demo[1:]
Traceback (most recent call last):
  File "<pyshell#132>", line 1, in <module>
    demo = demo[:1] + 1000, + demo[1:]
TypeError: can only concatenate tuple (not "int") to tuple
>>> demo = demo[:1] + (1000,) + demo[1:]
>>> demo
(2, 1000, 4, 5, 7)
>>> demo
(2, 1000, 4, 5, 7)
>>> demo = demo[:1] + (1000,) + demo[1:]
>>> demo
(2, 1000, 1000, 4, 5, 7)
>>> demo(:)
SyntaxError: invalid syntax
>>> 